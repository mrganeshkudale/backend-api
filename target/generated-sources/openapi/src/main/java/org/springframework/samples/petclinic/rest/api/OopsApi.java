/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.springframework.samples.petclinic.rest.api;

import org.springframework.samples.petclinic.rest.dto.RestErrorDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-05-11T15:33:08.613541700+05:30[Asia/Calcutta]")
@Validated
@Api(value = "oops", description = "the oops API")
public interface OopsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /oops : Always fails
     * Produces sample error response.
     *
     * @return Never returned. (status code 200)
     *         or Not modified. (status code 304)
     *         or Bad request. (status code 400)
     */
    @ApiOperation(value = "Always fails", nickname = "failingRequest", notes = "Produces sample error response.", response = String.class, tags={ "failing", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Never returned.", response = String.class),
        @ApiResponse(code = 304, message = "Not modified."),
        @ApiResponse(code = 400, message = "Bad request.", response = RestErrorDto.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/oops",
        produces = { "text/plain", "application/json" }
    )
    default ResponseEntity<String> failingRequest() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
